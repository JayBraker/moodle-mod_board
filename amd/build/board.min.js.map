{"version":3,"sources":["../src/board.js"],"names":["_serviceCall","method","args","callback","failcallback","Ajax","call","methodname","done","data","fail","error","Notification","exception","isAriaTriggerKey","key","encodeText","rawText","text","html","decodeText","encodedText","handleAction","elem","on","e","type","keyCode","preventDefault","handleEditableAction","callBeforeOnKeyEditing","is","Error","editable","board","options","contextid","strings","default_column_heading","post_button_text","cancel_button_text","remove_note_text","remove_column_text","note_changed_text","note_deleted_text","rate_note_text","Ok","Cancel","warning","modal_title_new","modal_title_edit","option_youtube","option_image","option_link","aria_newcolumn","aria_newpost","aria_deletecolumn","aria_deletepost","aria_addmedia","aria_addmedianew","aria_deleteattachment","aria_postedit","aria_canceledit","aria_postnew","aria_cancelnew","aria_ratepost","invalid_file_extension","invalid_file_size_min","invalid_file_size_max","MEDIA_SELECTION_BUTTONS","ATTACHMENT_IMAGE","SORTBY_DATE","SORTBY_RATING","reloadTimer","lastHistoryId","isEditor","userId","mediaSelection","mediaselection","editingNote","isReadOnlyBoard","readonly","ratingenabled","sortby","editModal","serviceCall","stopUpdating","apply","arguments","updateBoard","getNote","ident","getNoteTextForNote","note","find","getNoteHeadingForNote","getNoteBorderForNote","getNoteButtonsForNote","getNoteAttachmentsForNote","textIdentifierForNote","noteText","noteHeading","noteAttachment","attachmentDataForNote","length","replace","split","slice","join","info","updateNoteAria","noteId","columnIdentifier","closest","noteIdentifier","deleteNoteString","attr","updateColumnAria","columnId","column","newNoteString","deleteColumnString","each","index","stopNoteEdit","remove","noteBorder","show","hide","startNoteEdit","pendingNote","showModalForm","deleteNote","confirm","id","result","status","historyid","rateNote","rating","canrate","sortNotes","then","rateModal","getRoot","ModalEvents","hidden","attachmentTypeChanged","val","attachmentInfo","attachmentUrl","attachmentFile","attachmentIcon","removeAttachment","prop","attachmentTypeToString","FileReader","removeClass","addClass","attachmentFAIcon","setAttachment","attachment","attType","url","previewAttachment","filename","filecontents","fileElem","attachmentFAIcons","fixEmbedUrlIfNeeded","parseInt","addNote","columnid","heading","content","owner","sortorder","ismynote","iseditable","notecontent","noteAriaText","attachmentPreview","append","columnContent","removeElement","beginEdit","rateElement","lastOne","last","insertAfter","prepend","addColumn","name","notes","nameCache","columnHeader","columnSort","columnName","columnNewContent","hideheaders","toggleFontSize","closeOnEnter","noteicon","userid","timecreated","updateSortable","addNewColumnButton","newBusy","columnicon","boardid","updateNote","processBoardHistory","since","boardhistory","item","JSON","parse","action","formModal","alert","instant","history_refresh","setTimeout","clearTimeout","toggle","sortCol","parent","direction","desc","asc","a","b","sort","appendTo","sortable","connectWith","stop","ui","tocolumn","getBody","noteid","Fragment","loadFragment","updateModalAria","modal","addYoutube","addImage","addLink","postButton","cancelButton","modalRoot","button","getActionSelector","title","ModalFactory","create","types","SAVE_CANCEL","body","large","removeOnClose","getBodyPromise","setLarge","setSaveButtonText","setButtonText","save","submit","changeEvent","document","createEvent","initEvent","valid","get","reportValidity","element","dispatchEvent","invalid","$","merge","first","focus","formData","stringify","serialize","jsonformdata","Y","use","M","core_formchangechecker","reset_form_dirty_state","destroy","mediaSelect","ytButton","pictureButton","linkButton","updateMediaButtons","init","columns","stringsInfo","string","push","component","when","results"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle the board.\n *\n * @package    mod_board\n * @author     Karen Holland <karen@brickfieldlabs.ie>\n * @copyrigt   2021 Brickfield Education Labs <https://www.brickfield.ie/>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport \"jqueryui\";\nimport {get_strings as getStrings} from \"core/str\";\nimport Ajax from \"core/ajax\";\nimport ModalFactory from \"core/modal_factory\";\nimport ModalEvents from \"core/modal_events\";\nimport Notification from \"core/notification\";\nimport \"mod_board/jquery.editable.amd\";\nimport Fragment from \"core/fragment\";\n\n/**\n * Execute a ajax call to a mod_board ajax service.\n *\n * @method _serviceCall\n * @param method\n * @param args\n * @param callback\n * @param failcallback\n * @private\n */\nconst _serviceCall = function(method, args, callback, failcallback) {\n    Ajax.call([{\n        methodname: 'mod_board_' + method,\n        args: args,\n        done: function(data) {\n            callback(data);\n        },\n        fail: function(error) {\n            Notification.exception(error);\n            if (failcallback) {\n                failcallback(error);\n            }\n        }\n    }]);\n};\n\n/**\n * Indicates if this is a keycode we want to listend to for\n * aria purposes.\n *\n * @method isAriaTriggerKey\n * @param key\n * @returns {boolean}\n */\nconst isAriaTriggerKey = function(key) {\n    return key == 13 || key == 32;\n};\n\n/**\n * Encodes text into html entities.\n *\n * @method encodeText\n * @param rawText\n * @returns {*|jQuery}\n */\nconst encodeText = function(rawText) {\n    return $('<div />').text(rawText).html();\n};\n\n/**\n * Decodes text from html entities.\n *\n * @method decodeText\n * @param encodedText\n * @returns {*|jQuery}\n */\nconst decodeText = function(encodedText) {\n    return $('<div />').html(encodedText).text();\n};\n\n/**\n * Handler for keypress and click actions.\n *\n * $method handleAction\n * @param elem\n * @param callback\n * @returns {*}\n */\nconst handleAction = function(elem, callback) {\n    return elem.on('click keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode)) {\n                e.preventDefault();\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * Setting up element edibility.\n *\n * @method handleEditableAction\n * @param elem\n * @param callback\n * @param callBeforeOnKeyEditing\n * @returns {*}\n */\nconst handleEditableAction = function(elem, callback, callBeforeOnKeyEditing) {\n    if (elem.is(':editable')) {\n        throw new Error('handleEditableAction - must be called before setting the element as editable');\n    }\n\n    // Can't use on(edit) here because we want to do actions (save cache) before the control goes into edit mode\n    return elem.on('dblclick keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode) && !elem.is(':editing')) {\n                e.preventDefault();\n                if (callBeforeOnKeyEditing) {\n                    callback();\n                }\n                elem.editable('open');\n                if (callBeforeOnKeyEditing) {\n                    return;\n                }\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * The default function of the module, which does the setup of the page.\n *\n * @param board\n * @param options\n * @param contextid\n */\nexport default function(board, options, contextid) {\n    // An array of strings to load as a batch later.\n    // Not necessary, but used to load all the strings in one ajax call.\n    var strings = {\n        default_column_heading: '',\n        post_button_text: '',\n        cancel_button_text: '',\n        remove_note_text: '',\n        remove_column_text: '',\n        note_changed_text: '',\n        note_deleted_text: '',\n        rate_note_text: '',\n        Ok: '',\n        Cancel: '',\n        warning: '',\n        modal_title_new: '',\n        modal_title_edit: '',\n        option_youtube: '',\n        option_image: '',\n        option_link: '',\n\n        aria_newcolumn: '',\n        aria_newpost: '',\n        aria_deletecolumn: '',\n        aria_deletepost: '',\n        aria_addmedia: '',\n        aria_addmedianew: '',\n        aria_deleteattachment: '',\n        aria_postedit: '',\n        aria_canceledit: '',\n        aria_postnew: '',\n        aria_cancelnew: '',\n        aria_ratepost: '',\n\n        invalid_file_extension: '',\n        invalid_file_size_min: '',\n        invalid_file_size_max: '',\n    };\n\n    const MEDIA_SELECTION_BUTTONS = 1,\n          ATTACHMENT_VIDEO = 1,\n          ATTACHMENT_IMAGE = 2,\n          ATTACHMENT_LINK = 3,\n          SORTBY_DATE = 1,\n          SORTBY_RATING = 2;\n    var reloadTimer = null,\n        lastHistoryId = null,\n        isEditor = options.isEditor || false,\n        userId = options.userId || -1,\n        mediaSelection = options.mediaselection || MEDIA_SELECTION_BUTTONS,\n        editingNote = 0,\n        isReadOnlyBoard = options.readonly || false,\n        ratingenabled = options.ratingenabled,\n        sortby = options.sortby || SORTBY_DATE,\n        editModal = null;\n    /**\n     * Helper method to make calles to mod_board external services.\n     *\n     * @method serviceCall\n     * @param method\n     * @param args\n     * @param callback\n     * @param failcallback\n     */\n    var serviceCall = function(method, args, callback, failcallback) {\n        if (method !== 'board_history') {\n            stopUpdating();\n        }\n        _serviceCall(method, args, function() {\n            callback.apply(null, arguments);\n            if (method !== 'board_history' && method != 'get_board') {\n                updateBoard(true);\n            }\n        }, failcallback);\n    };\n\n    /**\n     * Returns the jquery element of a given note identifier.\n     *\n     * @method getNote\n     * @param ident\n     * @returns {jQuery|HTMLElement|*}\n     */\n    var getNote = function(ident) {\n        return $(\".board_note[data-ident='\" + ident + \"']\");\n    };\n\n    /**\n     * Returns the jquery element of the note text for the given note element.\n     *\n     * @method getNoteTextForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteTextForNote = function(note) {\n        return $(note).find(\".mod_board_note_text\");\n    };\n\n    /**\n     * Returns the jquery element of the note heading for the given note element.\n     *\n     * @method getNoteHeadingForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteHeadingForNote = function(note) {\n        return $(note).find(\".mod_board_note_heading\");\n    };\n\n    /**\n     * Returns the jquery element of the note border for the given note element.\n     *\n     * @method getNoteBorderForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteBorderForNote = function(note) {\n        return $(note).find(\".mod_board_note_border\");\n    };\n\n    /**\n     * Returns the jquery element of the note buttons for the given note element.\n     *\n     * @method getNoteButtonsForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteButtonsForNote = function(note) {\n        return $(note).find(\".mod_board_note_buttons\");\n    };\n\n    /**\n     * Gets a jquery node for the attachments of a given note.\n     *\n     * @method getNoteAttachmentsForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteAttachmentsForNote = function(note) {\n        return $(note).find(\".mod_board_note_attachment\");\n    };\n\n    /**\n     * Creates text identifier for a given node.\n     *\n     * @method textIdentifierForNote\n     * @param note\n     * @returns {null|*|jQuery}\n     */\n    var textIdentifierForNote = function(note) {\n        var noteText = getNoteTextForNote(note).html(),\n            noteHeading = getNoteHeadingForNote(note).html(),\n            noteAttachment = attachmentDataForNote(note);\n\n        if (noteHeading.length > 0) {\n            return noteHeading;\n        }\n        if (noteText.length > 0) {\n            return noteText.replace(/<br\\s*\\/?>/gi, \" \").replace(/\\n/g, \" \").split(/\\s+/).slice(0, 5).join(\" \");\n        }\n        if (noteAttachment.info && noteAttachment.info.length > 0) {\n            return noteAttachment.info;\n        }\n        return null;\n    };\n\n    /**\n     * Update the Aria info for a given note id.\n     *\n     * @method updateNoteAria\n     * @param noteId\n     */\n    var updateNoteAria = function(noteId) {\n        var note = getNote(noteId),\n            columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text();\n\n        if (noteId) { // New post\n            var noteIdentifier = textIdentifierForNote(note),\n                deleteNoteString = strings.aria_deletepost.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n\n            note.find('.delete_note').attr('aria-label', deleteNoteString).attr('title', deleteNoteString);\n            note.find('.mod_board_rating').attr('aria-label', strings.aria_ratepost.replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier));\n            note.find('.note_ariatext').html(noteIdentifier);\n        }\n\n    };\n\n    /**\n     * Update the Aria information for a given column id.\n     *\n     * @method updateColumnAria\n     * @param columnId\n     */\n    var updateColumnAria = function(columnId) {\n        var column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            newNoteString = strings.aria_newpost.replace('{column}', columnIdentifier),\n            deleteColumnString = strings.aria_deletecolumn.replace('{column}', columnIdentifier);\n        column.find('.newnote').attr('aria-label', newNoteString).attr('title', newNoteString);\n        column.find('.delete_column').attr('aria-label', deleteColumnString).attr('title', deleteColumnString);\n\n        column.find(\".board_note\").each(function(index, note) {\n            updateNoteAria($(note).data('ident'));\n        });\n    };\n\n    /**\n     * Stop the current note editing process.\n     *\n     * @method stopNoteEdit\n     */\n    var stopNoteEdit = function() {\n        if (!editingNote) {\n            getNote(0).remove();\n            return;\n        }\n\n        var note = getNote(editingNote);\n\n        if (note) {\n            var noteHeading = getNoteHeadingForNote(note);\n            var noteText = getNoteTextForNote(note);\n            var noteBorder = getNoteBorderForNote(note);\n\n            // Reset the visibility state.\n            noteHeading.show();\n            noteBorder.show();\n            noteText.show();\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n        }\n\n        editingNote = 0;\n    };\n\n    /**\n     * Start the editing of a particular note, by identifier.\n     *\n     * @method startNoteEdit\n     * @param ident\n     */\n    var startNoteEdit = function(ident) {\n\n        if (editingNote) {\n            if (editingNote == ident) {\n                return;\n            }\n            stopNoteEdit();\n        }\n\n        if (ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        var note = getNote(ident);\n        if (note) {\n            showModalForm(note);\n\n            if (ident) {\n                editingNote = ident;\n            }\n        }\n    };\n\n    /**\n     * Delete a given note, by identifier.\n     *\n     * @method deleteNote\n     * @param ident\n     */\n    var deleteNote = function(ident) {\n        Notification.confirm(\n            strings.remove_note_text.split(\"\\n\")[1], // Are you sure?\n            strings.remove_note_text.split(\"\\n\")[0], // This will effect others.\n            strings.Ok,\n            strings.Cancel,\n            function() {\n                serviceCall('delete_note', {id: ident}, function(result) {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        getNote(ident).remove();\n                    }\n                });\n            }\n        );\n    };\n\n    /**\n     * Rate (star) a give note, by identifier.\n     *\n     * @method rateNote\n     * @param ident\n     */\n    var rateNote = function(ident) {\n        if (!ratingenabled) {\n            return;\n        }\n        if (isReadOnlyBoard) {\n            return;\n        }\n\n        var note = getNote(ident),\n            rating = note.find('.mod_board_rating');\n        if (rating.data('disabled')) {\n            return;\n        }\n        rating.data('disabled', true);\n\n        serviceCall('can_rate_note', {id: ident}, function(canrate) {\n            if (canrate) {\n                Notification.confirm(\n                    strings.rate_note_text, // Are you sure?\n                    null,\n                    strings.Ok,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('rate_note', {id: ident}, function(result) {\n                            if (result.status) {\n                                lastHistoryId = result.historyid;\n                                rating.html(result.rating);\n                                if (sortby == SORTBY_RATING) {\n                                    sortNotes(note.closest('.board_column_content'));\n                                }\n                            }\n                            rating.data('disabled', false);\n                        });\n                    }\n                ).then(function(rateModal) {\n                    // Do this here, because it catches both cancel clicks, or someone clicking the X.\n                    rateModal.getRoot().on(ModalEvents.hidden, function() {\n                        rating.data('disabled', false);\n                    });\n                });\n            }\n        });\n    };\n\n    /**\n     * Update the attachment information of a note.\n     *\n     * @method attachmentTypeChanged\n     * @param note\n     */\n    var attachmentTypeChanged = function(note) {\n        var noteAttachment = getNoteAttachmentsForNote(note),\n            type = noteAttachment.find('.mod_board_type').val(),\n            attachmentInfo = noteAttachment.find('.info'),\n            attachmentUrl = noteAttachment.find('.url'),\n            attachmentFile = noteAttachment.find('.mod_board_file');\n\n        if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n            var attachmentIcon = noteAttachment.find('.mod_board_type_icon'),\n                removeAttachment = noteAttachment.find('.mod_board_remove_attachment');\n        } else {\n            getNoteButtonsForNote(note).find('.mod_board_attachment_button').hide();\n        }\n\n        if (type > \"0\") {\n            if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                removeAttachment.show();\n            }\n            attachmentInfo.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_info']);\n            attachmentUrl.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_url']);\n\n            attachmentInfo.show();\n            if (type == ATTACHMENT_IMAGE && FileReader) {\n                attachmentFile.show();\n                attachmentUrl.hide();\n            } else {\n                attachmentFile.hide();\n                attachmentUrl.show();\n            }\n\n            if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                attachmentIcon.removeClass().addClass(['mod_board_type_icon', 'fa', attachmentFAIcon(type)]);\n                attachmentIcon.show();\n                getNoteButtonsForNote(note).find('.mod_board_attachment_button').hide();\n            }\n        } else {\n            if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                removeAttachment.hide();\n            }\n            attachmentInfo.hide();\n            attachmentUrl.hide();\n            attachmentFile.hide();\n            if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                attachmentIcon.hide();\n            }\n            attachmentInfo.val('');\n            attachmentUrl.val('');\n            if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                getNoteButtonsForNote(note).find('.mod_board_attachment_button').show();\n            }\n        }\n    };\n\n    /**\n     * Set the attachment of a note.\n     *\n     * @method setAttachment\n     * @param note\n     * @param attachment\n     */\n    var setAttachment = function(note, attachment) {\n        var noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment) {\n            if (!attachment) {\n                attachment = {type: \"0\"};\n            } else {\n                attachment.type += \"\";// Just in case\n            }\n            var attType = noteAttachment.find('.mod_board_type');\n            attType.val(attachment.type ? attachment.type : \"0\");\n            if (attType.val() > \"0\") {\n                noteAttachment.find('.info').val(decodeText(attachment.info));\n                noteAttachment.find('.url').val(decodeText(attachment.url));\n            }\n            attachmentTypeChanged(note, attachment);\n        }\n        previewAttachment(note, attachment);\n    };\n\n    /**\n     * Returns an object with various information about a note's attachment.\n     *\n     * @method attachmentDataForNote\n     * @param note\n     * @returns {{filename: null, filecontents: null, type: number, url: null, info: null}}\n     */\n    var attachmentDataForNote = function(note) {\n        var attachment = {type: 0, info: null, url: null, filename: null, filecontents: null},\n            noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment.length) {\n            attachment.type = noteAttachment.find('.mod_board_type').val();\n            attachment.info = encodeText(noteAttachment.find('.info').val());\n            attachment.url = encodeText(noteAttachment.find('.url').val());\n            var fileElem = noteAttachment.find('.mod_board_file>input');\n            if (fileElem.data('filename')) {\n                attachment.filename = fileElem.data('filename');\n                attachment.filecontents = fileElem.data('filecontents');\n            }\n        }\n        if ((!attachment.info || !attachment.info.length) && (!attachment.url || !attachment.url.length) &&\n            (!attachment.filename)) {\n            attachment.type = 0;\n        }\n\n        return attachment;\n    };\n\n    /**\n     * Get the string type of a attachment type number.\n     *\n     * @method attachmentTypeToString\n     * @param type\n     * @returns {string|null}\n     */\n    var attachmentTypeToString = function(type) {\n        switch (type) {\n            case \"1\": return 'youtube';\n            case \"2\": return 'image';\n            case \"3\": return 'link';\n            default: return null;\n        }\n    };\n\n    var attachmentFAIcons = ['fa-youtube', 'fa-picture-o', 'fa-link'];\n    /**\n     * Get the fa icon for a given numeric attachment type.\n     *\n     * @method attachmentFAIcon\n     * @param type\n     * @returns {string|null}\n     */\n    var attachmentFAIcon = function(type) {\n        return attachmentFAIcons[type - 1] || null;\n    };\n\n    /**\n     * Display the attachment preview for a note.\n     *\n     * @method previewAttachment\n     * @param note\n     * @param attachment\n     */\n    var previewAttachment = function(note, attachment) {\n        var elem = note.find('.mod_board_preview');\n        if (!attachment) {\n            attachment = attachmentDataForNote(note);\n        }\n        var fixEmbedUrlIfNeeded = function(url) {\n            return url.replace(/watch\\?v=/gi, '/embed/').replace(/youtu\\.be/, 'youtube.com/embed');\n        };\n\n        if (!getNoteTextForNote(note).html().length) {\n            elem.addClass('mod_board_notext');\n        } else {\n            elem.removeClass('mod_board_notext');\n        }\n\n        elem.removeClass('wrapper_youtube');\n        elem.removeClass('wrapper_image');\n        elem.removeClass('wrapper_url');\n        if (attachment.filename && parseInt(attachment.type) == ATTACHMENT_IMAGE) { // Before uploading\n            elem.html('<img src=\"' + attachment.filecontents + '\" class=\"mod_board_preview_element\" alt=\"' +\n            attachment.info + '\"/>');\n            elem.addClass('wrapper_image');\n            elem.show();\n        } else if (attachment.url) {\n            switch (parseInt(attachment.type)) {\n                case ATTACHMENT_VIDEO: // Youtube\n                    elem.html('<iframe src=\"' + fixEmbedUrlIfNeeded(attachment.url) +\n                    '\" class=\"mod_board_preview_element\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;' +\n                    'encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>');\n                    elem.addClass('wrapper_youtube');\n                    elem.show();\n                break;\n                case ATTACHMENT_IMAGE: // Image\n                    elem.html('<img src=\"' + attachment.url + '\" class=\"mod_board_preview_element\" alt=\"' +\n                    attachment.info + '\"/>');\n                    elem.addClass('wrapper_image');\n                    elem.show();\n                break;\n                case ATTACHMENT_LINK: // Url\n                    elem.html('<a href=\"' + attachment.url + '\" class=\"mod_board_preview_element\" target=\"_blank\">' +\n                             (attachment.info || attachment.url) + '</a>');\n                    elem.addClass('wrapper_url');\n                    elem.show();\n                break;\n                default:\n                    elem.html('');\n                    elem.hide();\n            }\n        } else {\n            elem.html('');\n            elem.hide();\n        }\n    };\n\n    /**\n     * Add a new note with the given information.\n     *\n     * @method addNote\n     * @param columnid\n     * @param ident\n     * @param heading\n     * @param content\n     * @param attachment\n     * @param owner\n     * @param sortorder\n     * @param rating\n     */\n    var addNote = function(columnid, ident, heading, content, attachment, owner, sortorder, rating) {\n        var ismynote = owner.id == userId || !ident;\n        var iseditable = isEditor || (ismynote && !isReadOnlyBoard);\n\n        if (!ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        var note = $('<div class=\"board_note\" data-column=\"' + columnid + '\" data-ident=\"' + ident +\n            '\" data-sortorder=\"' + sortorder + '\"></div>');\n        if (ismynote) {\n            note.addClass('mod_board_mynote');\n        }\n        if (iseditable) {\n            note.addClass('mod_board_editablenote');\n        }\n\n        var notecontent = $('<div class=\"mod_board_note_content\"></div>'),\n            noteHeading = $('<div class=\"mod_board_note_heading\" tabindex=\"0\">' + (heading ? heading : '') + '</div>'),\n            noteBorder = $('<div class=\"mod_board_note_border\"></div>'),\n            noteText = $('<div class=\"mod_board_note_text\" tabindex=\"0\">' + (content ? content : '') + '</div>'),\n            noteAriaText = $('<div class=\"note_ariatext hidden\" role=\"heading\" aria-level=\"4\" tabindex=\"0\"></div>'),\n            attachmentPreview = $('<div class=\"mod_board_preview\"></div>');\n\n        notecontent.append(noteHeading);\n        notecontent.append(noteBorder);\n        notecontent.append(noteText);\n        notecontent.append(noteAriaText);\n\n        notecontent.append(attachmentPreview);\n        note.append(notecontent);\n\n        var columnContent = $('.board_column[data-ident=' + columnid + '] .board_column_content');\n\n        if (iseditable) {\n            var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_note\" role=\"button\" tabindex=\"0\"></div>');\n            handleAction(removeElement, function() {\n                deleteNote(ident);\n            });\n\n            if (!ident) {\n                removeElement.hide();\n            }\n            notecontent.append(removeElement);\n\n            var beginEdit = function() {\n                startNoteEdit(ident);\n            };\n\n            note.on('dblclick', beginEdit);\n\n            handleEditableAction(noteBorder, beginEdit);\n\n            setAttachment(note, attachment);\n        } else {\n            previewAttachment(note, attachment);\n        }\n\n        if (ident) {\n            if (ratingenabled) {\n                note.addClass('mod_board_rateablenote');\n                var rateElement = $('<div class=\"fa fa-star mod_board_rating\" role=\"button\" tabindex=\"0\">' + rating + '</div>');\n\n                handleAction(rateElement, function() {\n                    rateNote(ident);\n                });\n                notecontent.append(rateElement);\n            }\n\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n\n            var lastOne = columnContent.find(\".board_note\").last();\n\n            if (lastOne.length) {\n                note.insertAfter(lastOne);\n            } else {\n                columnContent.prepend(note);\n            }\n        } else {\n            $('.board_column[data-ident=' + columnid + '] .board_column_newcontent').append(note);\n            // This is effectively a note placeholder. So we don't need to show ot.\n            note.hide();\n            beginEdit();\n        }\n    };\n\n    /**\n     * Add a new column.\n     *\n     * @method addColumn\n     * @param ident\n     * @param name\n     * @param notes\n     */\n    var addColumn = function(ident, name, notes) {\n        var iseditable = isEditor,\n            nameCache = null,\n            column = $('<div class=\"board_column board_column_hasdata\" data-ident=\"' + ident + '\"></div>'),\n            columnHeader = $('<div class=\"board_column_header\"></div>'),\n            columnSort = $('<div class=\"mod_board_column_sort fa\"></div>'),\n            columnName = $('<div class=\"mod_board_column_name\" tabindex=\"0\" aria-level=\"3\" role=\"heading\">' + name + '</div>'),\n            columnContent = $('<div class=\"board_column_content\"></div>'),\n            columnNewContent = $('<div class=\"board_column_newcontent\"></div>');\n        columnHeader.append(columnSort);\n        columnHeader.append(columnName);\n\n        if (options.hideheaders) {\n            columnName.addClass('d-none');\n        }\n\n        columnSort.on('click', function() {\n            sortNotes(columnContent, true);\n        });\n\n        if (iseditable) {\n            column.addClass('mod_board_editablecolumn');\n\n            var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_column\" role=\"button\" tabindex=\"0\"></div>');\n            handleAction(removeElement, function() {\n                Notification.confirm(\n                    strings.remove_column_text.split(\". \")[1], // Are you sure?\n                    strings.remove_column_text.split(\". \")[0], // This will effect others.\n                    strings.Ok,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('delete_column', {id: ident}, function(result) {\n                            if (result.status) {\n                                column.remove();\n                                lastHistoryId = result.historyid;\n                            }\n                        });\n                    }\n                );\n            });\n\n            columnHeader.append(removeElement);\n        }\n\n        column.append(columnHeader);\n        column.append(columnContent);\n        column.append(columnNewContent);\n\n        if (iseditable) {\n            handleEditableAction(columnName, function() {\n                nameCache = columnName.html();\n            }, true);\n\n            columnName.editable({\n                toggleFontSize: false,\n                closeOnEnter: true,\n                callback: function(data) {\n                    if (data.content) {\n                        serviceCall('update_column', {id: ident, name: columnName.html()}, function(result) {\n                            if (!result.status) {\n                                columnName.html(nameCache);\n                                nameCache = null;\n                            } else {\n                                lastHistoryId = result.historyid;\n                                updateColumnAria(ident);\n                            }\n                        }, function() {\n                            columnName.html(nameCache);\n                            nameCache = null;\n                        });\n                    } else {\n                        columnName.html(nameCache);\n                        nameCache = null;\n                    }\n                }\n            });\n        }\n\n        if (!isReadOnlyBoard) {\n            columnNewContent.append('<div class=\"board_button newnote\" role=\"button\" tabindex=\"0\">' +\n            '<div class=\"button_content\"><span class=\"fa ' + options.noteicon + '\"></span></div></div>');\n\n            handleAction(columnNewContent.find('.newnote'), function() {\n                addNote(ident, 0, null, null, null, {id: userId}, 0, 0);\n            });\n        }\n\n        var lastOne = $(\".mod_board .board_column_hasdata\").last();\n        if (lastOne.length) {\n            column.insertAfter(lastOne);\n        } else {\n            $(\".mod_board\").append(column);\n        }\n\n        if (notes) {\n            for (var index in notes) {\n                addNote(ident, notes[index].id, notes[index].heading, notes[index].content,\n                    {type: notes[index].type, info: notes[index].info, url: notes[index].url},\n                    {id: notes[index].userid}, notes[index].timecreated, notes[index].rating);\n            }\n        }\n        sortNotes(columnContent);\n        updateColumnAria(ident);\n        if (isEditor) {\n            updateSortable();\n        }\n    };\n\n    /**\n     * Add the new column button.\n     *\n     * @method addNewColumnButton\n     */\n    var addNewColumnButton = function() {\n        var column = $('<div class=\"board_column board_column_empty\"></div>'),\n            newBusy = false;\n        column.append('<div class=\"board_button newcolumn\" role=\"button\" tabindex=\"0\" aria-label=\"' +\n            strings.aria_newcolumn + '\" title=\"' + strings.aria_newcolumn + '\"><div class=\"button_content\"><span class=\"fa '\n            + options.columnicon + '\"></span></div></div>');\n\n        handleAction(column.find('.newcolumn'), function() {\n            if (newBusy) {\n                return;\n            }\n            newBusy = true;\n\n            serviceCall('add_column', {boardid: board.id, name: strings.default_column_heading}, function(result) {\n                addColumn(result.id, strings.default_column_heading);\n                lastHistoryId = result.historyid;\n                newBusy = false;\n            }, function() {\n                newBusy = false;\n            });\n        });\n\n        $(\".mod_board\").append(column);\n    };\n\n    /**\n     * Update a note with the provided information.\n     *\n     * @method updateNote\n     * @param note\n     * @param heading\n     * @param data\n     */\n    var updateNote = function(note, heading, data) {\n        var noteHeading = getNoteHeadingForNote(note);\n        var noteText = getNoteTextForNote(note);\n        var noteBorder = getNoteBorderForNote(note);\n\n        noteText.html(data.content);\n        noteHeading.html(data.heading);\n        setAttachment(note, data.attachment);\n        updateNoteAria(data.id);\n\n        // Reset the visibility state.\n        noteHeading.show();\n        noteBorder.show();\n        noteText.show();\n        if (!noteHeading.html()) {\n            noteHeading.hide();\n            noteBorder.hide();\n        }\n        if (!noteText.html() && noteHeading.html()) {\n            noteText.hide();\n            noteBorder.hide();\n        }\n    };\n\n    /**\n     * Fetch and process the recent board history.\n     *\n     * @method processBoardHistory\n     */\n    var processBoardHistory = function() {\n        serviceCall('board_history', {id: board.id, since: lastHistoryId}, function(boardhistory) {\n            for (var index in boardhistory) {\n                var item = boardhistory[index];\n                if (item.boardid != board.id) {\n                    continue; // Hmm\n                }\n\n                var data = JSON.parse(item.content);\n                if (item.action == 'add_note') {\n                    addNote(data.columnid, data.id, data.heading, data.content, data.attachment,\n                        {id: item.userid}, data.timecreated, data.rating);\n                    updateNoteAria(data.id);\n                    sortNotes($('.board_column[data-ident=' + data.columnid + '] .board_column_content'));\n                } else if (item.action == 'update_note') {\n                    let note = getNote(data.id),\n                        formModal = editModal,\n                        historyData = data;\n                    if (note) {\n                        let noteHeading = getNoteHeadingForNote(note);\n\n                        if (editingNote == data.id) {\n                            Notification.confirm(\n                                strings.note_changed_text.split(\"\\n\")[0], // Confirm.\n                                strings.note_changed_text.split(\"\\n\")[1], // Are you sure?\n                                strings.Ok,\n                                strings.Cancel,\n                                function() {\n                                    formModal.hide();\n                                    updateNote(note, noteHeading, historyData);\n                                    stopNoteEdit();\n                                }\n                            );\n                        } else {\n                            updateNote(note, noteHeading, data);\n                        }\n                    }\n                } else if (item.action == 'delete_note') {\n                    if (editingNote == data.id) {\n                        Notification.alert(strings.warning, strings.note_deleted_text);\n                        stopNoteEdit();\n                    }\n                    getNote(data.id).remove();\n\n                } else if (item.action == 'add_column') {\n                    addColumn(data.id, data.name);\n                } else if (item.action == 'update_column') {\n                    $(\".board_column[data-ident='\" + data.id + \"'] .mod_board_column_name\").html(data.name);\n                    updateColumnAria(data.id);\n                } else if (item.action == 'delete_column') {\n                    var column = $(\".board_column[data-ident='\" + data.id + \"']\");\n                    if (editingNote && column.find('.board_note[data-ident=\"' + editingNote + '\"]').length) {\n                        stopNoteEdit();\n                    }\n                    column.remove();\n                } else if (item.action == 'rate_note') {\n                    var note = getNote(data.id);\n                    note.find('.mod_board_rating').html(data.rating);\n                    if (sortby == SORTBY_RATING) {\n                        sortNotes(note.closest('.board_column_content'));\n                    }\n                }\n                lastHistoryId = item.id;\n            }\n\n            updateBoard();\n        });\n    };\n\n    /**\n     * Trigger a board update.\n     *\n     * @method updateBoard\n     * @param instant\n     */\n    var updateBoard = function(instant) {\n        if (instant) {\n            processBoardHistory();\n        } else if (options.history_refresh > 0) {\n            if (reloadTimer) {\n                stopUpdating();\n            }\n            reloadTimer = setTimeout(processBoardHistory, options.history_refresh * 1000);\n        }\n    };\n\n    /**\n     * Stop/prevent the board reload timer from firing.\n     *\n     * @method stopUpdating\n     */\n    var stopUpdating = function() {\n        clearTimeout(reloadTimer);\n        reloadTimer = null;\n    };\n\n    /**\n     * Sort a set of notes.\n     *\n     * @sortNotes\n     * @param content\n     * @param toggle\n     */\n    var sortNotes = function(content, toggle) {\n        var sortCol = $(content).parent().find('.mod_board_column_sort'),\n            direction = $(content).data('sort');\n        if (!direction) {\n            if (sortby == SORTBY_RATING) {\n                direction = 'desc';\n            } else {\n                direction = 'asc';\n            }\n        }\n        if (toggle) {\n            direction = direction == 'asc' ? 'desc' : 'asc';\n        }\n\n        if (direction == 'asc') {\n            sortCol.removeClass('fa-angle-down');\n            sortCol.addClass('fa-angle-up');\n        } else {\n            sortCol.removeClass('fa-angle-up');\n            sortCol.addClass('fa-angle-down');\n        }\n        $(content).data('sort', direction);\n\n        var desc,\n            asc;\n        if (sortby == SORTBY_DATE) {\n            desc = function(a, b) {\n                return $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        } else {\n            desc = function(a, b) {\n                return $(b).find('.mod_board_rating').text() - $(a).find('.mod_board_rating').text() ||\n                $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).find('.mod_board_rating').text() - $(b).find('.mod_board_rating').text() ||\n                $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        }\n\n        $('> .board_note', $(content)).sort(direction === 'asc' ? asc : desc).appendTo($(content));\n\n    };\n\n    /**\n     * Update sorting of sortable content.\n     *\n     * @method updateSortable\n     */\n    var updateSortable = function() {\n        $(\".board_column_content\").sortable({\n            connectWith: \".board_column_content\",\n            stop: function(e, ui) {\n                var note = $(ui.item),\n                    tocolumn = note.closest('.board_column'),\n                    columnid = tocolumn.data('ident'),\n                    elem = $(this);\n\n                serviceCall('move_note', {id: note.data('ident'), columnid: columnid}, function(result) {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        updateNoteAria(note.data('ident'));\n                        sortNotes($('.board_column[data-ident=' + columnid + '] .board_column_content'));\n                    } else {\n                        elem.sortable('cancel');\n                    }\n                });\n            }\n        });\n    };\n\n    /**\n     * Get the body fragment for the modal form.\n     *\n     * @param noteid\n     * @param columnid\n     * @returns {Deferred|*}\n     */\n    var getBody = function(noteid, columnid) {\n        // Get the content of the modal.\n        var params = {noteid: noteid, columnid: columnid};\n        return Fragment.loadFragment('mod_board', 'note_form', contextid, params);\n    };\n\n    /**\n     * Setup the aria labels for the modal.\n     *\n     * @param note\n     * @param modal\n     */\n    var updateModalAria = function(note, modal) {\n        let columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text(),\n            addYoutube,\n            addImage,\n            addLink,\n            postButton,\n            cancelButton,\n            modalRoot = modal.getRoot();\n\n        if (note.data('ident')) {\n            // Is a note update.\n            var noteIdentifier = textIdentifierForNote(note);\n\n            postButton = strings.aria_postedit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            cancelButton = strings.aria_canceledit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            addYoutube = strings.aria_addmedia.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addImage = strings.aria_addmedia.replace('{type}', strings.option_image).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addLink = strings.aria_addmedia.replace('{type}', strings.option_link).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n        } else {\n            // Note is new.\n            postButton = strings.aria_postnew.replace('{column}', columnIdentifier);\n            cancelButton = strings.aria_cancelnew.replace('{column}', columnIdentifier);\n            addYoutube = strings.aria_addmedianew.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier);\n            addImage = strings.aria_addmedianew.replace('{type}', strings.option_image).replace('{column}', columnIdentifier);\n            addLink = strings.aria_addmedianew.replace('{type}', strings.option_link).replace('{column}', columnIdentifier);\n        }\n\n        if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('aria-label', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('title', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('aria-label', addImage);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('title', addImage);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('aria-label', addLink);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('title', addLink);\n        }\n\n        let button = modalRoot.find(modal.getActionSelector('save'));\n        if (button) {\n            button.attr('aria-label', postButton);\n        }\n        button = modalRoot.find(modal.getActionSelector('cancel'));\n        if (button) {\n            button.attr('aria-label', cancelButton);\n        }\n    };\n\n    /**\n     * Displays the modal form to edit a note.\n     *\n     * @param note\n     */\n    var showModalForm = function(note) {\n        let noteId = 0,\n            columnId = note.data('column'),\n            column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            title;\n\n        if (note.data('ident')) {\n            noteId = note.data('ident');\n            title = strings.modal_title_edit.replace('{column}', columnIdentifier);\n        } else {\n            title = strings.modal_title_new.replace('{column}', columnIdentifier);\n        }\n\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: getBody(noteId, columnId),\n            large: true,\n            removeOnClose: true\n        }).then(function(modal) {\n            // Use the body promise so we know body content is loaded.\n            modal.getBodyPromise().then(function () {\n\n                editModal = modal;\n                modal.setLarge();\n                modal.setSaveButtonText(strings.post_button_text);\n                modal.setButtonText('cancel', strings.cancel_button_text);\n\n                modal.getRoot().on(ModalEvents.hidden, function () {\n                    stopNoteEdit();\n                    if (!note.data('ident')) {\n                        note.remove();\n                    }\n                });\n\n                modal.getRoot().on(ModalEvents.save, function (e) {\n                    e.preventDefault();\n                    modal.getRoot().find('form').submit();\n                });\n\n                var changeEvent = document.createEvent('HTMLEvents');\n                changeEvent.initEvent('change', true, true);\n\n                modal.getRoot().on('submit', 'form', function (e) {\n                    e.preventDefault();\n\n                    // First, make sure the native html5 validity checks are run.\n                    let valid = modal.getRoot().find('form').get(0).reportValidity();\n                    if (!valid) {\n                        return;\n                    }\n\n                    // Prompt all inputs to run their validation functions.\n                    // Normally this would happen when the form is submitted, but\n                    // since we aren't submitting the form normally we need to run client side\n                    // validation.\n                    modal.getRoot().find(':input').each(function (index, element) {\n                        element.dispatchEvent(changeEvent);\n                    });\n\n                    // Now the change events have run, see if there are any \"invalid\" form fields.\n                    var invalid = $.merge(\n                        modal.getRoot().find('[aria-invalid=\"true\"]'),\n                        modal.getRoot().find('.error'),\n                        modal.getRoot().find(':invalid')\n                    );\n\n                    // If we found invalid fields, focus on the first one and do not submit via ajax.\n                    if (invalid.length) {\n                        invalid.first().focus();\n                        return;\n                    }\n\n                    var formData = JSON.stringify(modal.getRoot().find('form').serialize());\n                    serviceCall('submit_form', {contextid: contextid, jsonformdata: formData}, function (result) {\n                        if (result.status) {\n                            if (result.action == 'insert') {\n                                // Added a new note.\n                                lastHistoryId = result.historyid;\n                                note.remove();\n                                addNote(columnId, result.note.id, result.note.heading, result.note.content,\n                                    {type: result.note.type, info: result.note.info, url: result.note.url},\n                                    {id: result.note.userid}, result.note.timecreated, result.note.rating);\n                                sortNotes($('.board_column[data-ident=' + columnId + '] .board_column_content'));\n                                updateNoteAria(result.note.id);\n                            } else {\n                                // Updated existing note.\n                                lastHistoryId = result.historyid;\n                                getNoteTextForNote(note).html(result.note.content);\n                                getNoteHeadingForNote(note).html(result.note.heading);\n                                updateNoteAria(result.note.id);\n                                setAttachment(note, {\n                                    type: result.note.type,\n                                    info: result.note.info, url: result.note.url\n                                });\n                            }\n                            stopNoteEdit();\n\n                            // Clear the form changed checker.\n                            Y.use('moodle-core-formchangechecker', function() {\n                                M.core_formchangechecker.reset_form_dirty_state();\n                            });\n\n                            modal.destroy();\n                        } else {\n                            // TODO show error.\n                        }\n                    });\n\n                });\n\n                if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                    // First hide the select menu.\n                    modal.getRoot().find('#fitem_id_mediatype').hide();\n\n                    let mediaSelect = modal.getRoot().find('#fitem_id_mediatype select'),\n                        ytButton = modal.getRoot().find('.mod_board_attachment_button.youtube_button'),\n                        pictureButton = modal.getRoot().find('.mod_board_attachment_button.image_button'),\n                        linkButton = modal.getRoot().find('.mod_board_attachment_button.link_button'),\n                        updateMediaButtons = function() {\n                            ytButton.removeClass('selected');\n                            pictureButton.removeClass('selected');\n                            linkButton.removeClass('selected');\n                            switch (mediaSelect.val()) {\n                                case (\"1\"):\n                                    ytButton.addClass('selected');\n                                    break;\n                                case (\"2\"):\n                                    pictureButton.addClass('selected');\n                                    break;\n                                case (\"3\"):\n                                    linkButton.addClass('selected');\n                                    break;\n                            }\n                        };\n\n                    updateMediaButtons();\n                    ytButton.on('click', function () {\n                        if (mediaSelect.val() === \"1\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(1);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    pictureButton.on('click', function () {\n                        if (mediaSelect.val() === \"2\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(2);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    linkButton.on('click', function () {\n                        if (mediaSelect.val() === \"3\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(3);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                } else {\n                    modal.getRoot().find('#fitem_id_mediabuttons').hide();\n                }\n\n                updateModalAria(note, modal);\n                modal.show();\n\n                return modal;\n            });\n            return modal;\n        });\n    };\n\n    /**\n     * Initialize board.\n     *\n     * @method init\n     */\n    var init = function() {\n        serviceCall('get_board', {id: board.id}, function(columns) {\n            // Init\n            if (columns) {\n                for (var index in columns) {\n                    addColumn(columns[index].id, columns[index].name, columns[index].notes || {});\n                }\n            }\n\n            if (isEditor) {\n                addNewColumnButton();\n            }\n\n            lastHistoryId = board.historyid;\n\n            if (isEditor) {\n                updateSortable();\n            }\n\n            updateBoard();\n        });\n    };\n\n    // Get strings\n    var stringsInfo = [];\n    for (var string in strings) {\n        stringsInfo.push({key: string, component: 'mod_board'});\n    }\n\n    $.when(getStrings(stringsInfo)).done(function(results) {\n        var index = 0;\n        for (string in strings) {\n            strings[string] = results[index++];\n        }\n\n        init();\n    });\n}\n"],"file":"board.min.js"}